local M = {
    'goolord/alpha-nvim',
    event = 'VimEnter',
    opts = function()
        local headers = require('custom.headers')
        local alpha = require('alpha')
        local dashboard = require('alpha.themes.dashboard')

        -- Header
        dashboard.section.header.val = headers.neostorm
        -- dashboard.section.footer.val = headers.neostorm


        dashboard.section.buttons.val = {
            dashboard.button('e', '  󱞩 New file', ':ene <BAR> startinsert <CR>'),
            dashboard.button('f', '󰈞  󱞩 Find file', ':Telescope find_files<CR>'),
            dashboard.button('r', '󱧶  󱞩 Recent files', ':Telescope oldfiles<CR>'),
            dashboard.button('c', '  󱞩 Config', ':e $MYVIMRC | :cd %:p:h | wincmd k | pwd<CR> '),
            dashboard.button('q', '󰗼  󱞩 Exit NeoStorm', ':qa<CR>'),
        }

        dashboard.section.header.opts.hl = 'AlphaHeader'
        for _, button in ipairs(dashboard.section.buttons.val) do
            button.opts.hl = 'AlphaHeader'
            button.opts.hl_shortcut = 'AlphaHeader'
        end
        dashboard.opts.layout = {
            dashboard.section.header,
            -- { type = "padding", val = 4 },
            dashboard.section.buttons,
            dashboard.section.footer,
        }
        -- Disable folding on alpha buffer
        vim.cmd([[
          autocmd FileType alpha setlocal nofoldenable
          ]])
        return dashboard
    end,
    config = function(_, dashboard)
        if vim.o.filetype == 'lazy' then
            vim.cmd.close()
            vim.api.nvim_create_autocmd('User', {
                pattern = 'AlphaReady',
                callback = function()
                    require('lazy').show()
                end,
            })
        end
        require('alpha').setup(dashboard.opts)
        vim.api.nvim_create_autocmd('User', {
            pattern = 'LazyVimStarted',
            callback = function()
                pcall(vim.cmd.AlphaRedraw)
            end,
        })
        local function get_listed_buffers()
            local buffers = {}
            local len = 0
            for buffer = 1, vim.fn.bufnr('$') do
                if vim.fn.buflisted(buffer) == 1 then
                    len = len + 1
                    buffers[len] = buffer
                end
            end

            return buffers
        end

        vim.api.nvim_create_augroup('alpha_on_empty', { clear = true })
        vim.api.nvim_create_autocmd('User', {
            pattern = 'BDeletePre',
            group = 'alpha_on_empty',
            callback = function(event)
                local found_non_empty_buffer = false
                local buffers = get_listed_buffers()

                for _, bufnr in ipairs(buffers) do
                    if not found_non_empty_buffer then
                        local name = vim.api.nvim_buf_get_name(bufnr)
                        local ft = vim.api.nvim_buf_get_option(bufnr, 'filetype')

                        if bufnr ~= event.buf and name ~= '' and ft ~= 'Alpha' then
                            found_non_empty_buffer = true
                        end
                    end
                end

                if not found_non_empty_buffer then
                    require 'neo-tree'.close_all()
                    vim.cmd [[:Alpha]]
                end
            end,
        })
    end,
}
return M
